# ===========================================
# FT TRANSFER API - ENVIRONMENT CONFIGURATION
# Copy this file to .env and update the values
# ===========================================

# ===========================================
# SERVER CONFIGURATION
# ===========================================
PORT=3000
NODE_ENV=development
LOG_LEVEL=info

# ===========================================
# NEAR BLOCKCHAIN CONFIGURATION
# ===========================================
NETWORK_ID=testnet
NODE_URL=https://rpc.testnet.near.org
WALLET_URL=https://wallet.testnet.near.org
HELPER_URL=https://helper.testnet.near.org
EXPLORER_URL=https://explorer.testnet.near.org

# Your NEAR account that will send the FT transfers
# Must have sufficient FT token balance and NEAR for gas
MASTER_ACCOUNT_ID=your-account.testnet

# Private key for the master account (with ed25519: prefix)
# Generate using: near generate-key your-account.testnet
MASTER_PRIVATE_KEY=ed25519:your-private-key-here

# FT contract address that implements ft_transfer method
# Examples: usdt.testnet, wrap.testnet, or your custom FT contract
CONTRACT_ID=usdt.testnet

# ===========================================
# PERFORMANCE CONFIGURATION (100+ TPS OPTIMIZED)
# ===========================================

# Number of transfers to batch together (optimal: 50-100)
BATCH_SIZE=75

# Milliseconds between batch processing (optimal: 200-500ms)
BATCH_INTERVAL_MS=300

# Maximum parallel transaction processing
MAX_PARALLEL_TX=30

# Maximum concurrent batches being processed simultaneously
MAX_CONCURRENT_BATCHES=15

# Queue concurrency for request handling (high TPS)
QUEUE_CONCURRENCY=150

# Maximum retries for failed transfers
QUEUE_MAX_RETRIES=3

# ===========================================
# GAS CONFIGURATION (NEAR FORMAT)
# ===========================================

# Gas limit for ft_transfer calls in NEAR format (30 TGas)
FUNCTION_CALL_GAS=30000000000000

# Attached deposit for ft_transfer (1 yoctoNEAR required)
ATTACHED_DEPOSIT=1

# ===========================================
# RATE LIMITING & SECURITY
# ===========================================

# Requests per IP per duration window
RATE_LIMIT_POINTS=1000

# Duration window in seconds
RATE_LIMIT_DURATION=1

# CORS origins (use specific domains in production)
CORS_ORIGIN=*

# ===========================================
# MONITORING & OBSERVABILITY
# ===========================================

# Enable Prometheus metrics collection
METRICS_ENABLED=true

# Health check interval in milliseconds
HEALTH_CHECK_INTERVAL=30000

# ===========================================
# PRODUCTION OPTIMIZED SETTINGS
# ===========================================
# For maximum 100+ TPS performance, use these values:

# High Performance Settings (uncomment for production)
# BATCH_SIZE=100
# BATCH_INTERVAL_MS=200
# MAX_PARALLEL_TX=50
# QUEUE_CONCURRENCY=200
# MAX_CONCURRENT_BATCHES=20
# FUNCTION_CALL_GAS=20000000000000

# ===========================================
# EXAMPLE TESTNET CONFIGURATION
# ===========================================
# Complete working example for testnet:

# NETWORK_ID=testnet
# MASTER_ACCOUNT_ID=dev-1234567890-abcdef.testnet
# MASTER_PRIVATE_KEY=ed25519:2WQA8GGM...your-64-char-key...xyz123
# CONTRACT_ID=usdt.testnet
# NODE_URL=https://rpc.testnet.near.org
# BATCH_SIZE=75
# BATCH_INTERVAL_MS=300
# MAX_PARALLEL_TX=30
# QUEUE_CONCURRENCY=150

# ===========================================
# SETUP CHECKLIST
# ===========================================
# □ 1. Create NEAR testnet account
# □ 2. Fund account with NEAR tokens for gas
# □ 3. Get FT tokens in your account  
# □ 4. Generate and save private key
# □ 5. Set CONTRACT_ID to correct FT contract
# □ 6. Test with small batch first
# □ 7. Run benchmark to validate 100+ TPS
# □ 8. Deploy to production environment

# ===========================================
# IMPORTANT NOTES
# ===========================================
# - Keep private keys secure and never commit to version control
# - Ensure sufficient FT token balance for high TPS testing
# - Monitor gas usage and adjust FUNCTION_CALL_GAS if needed
# - Test thoroughly on testnet before mainnet deployment
# - Use specific CORS_ORIGIN domains in production